# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
load(SleepStudy)
head(SleepStudy)
head(SleepStudy)[3]
head(SleepStudy,3)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE,cache=TRUE)
library(mosaic)
library(Lock5withR)
Bootstrap <- do(1000) * mean(~ Time, data = resample(CommuteAtlanta))
head(Bootstrap)
gf_histogram(..density..~ mean, data = Bootstrap, color = "black", fill = "white") %>%
gf_dens() %>%
gf_labs(x = "Commute Means")
gf_dens(~ mean, data = Bootstrap) %>%
gf_labs(x = "Commute Means")
#Part a
prop(~ (mean >= 30 & mean <= 31), data = Bootstrap)
#Part b
prop(~ (mean < 30), data = Bootstrap)
#Part c
prop(~(mean > 31), data = Bootstrap)
View(SleepStudy)
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
p = .5
n = 10
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p = .25
n = 10
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p = .05
n = 10
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.5
n = 10
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.5
n = 16
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.9
n = 16
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.5
n = 16
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.9
n = 16
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.9
n = 1600
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
p =0.9
n = 16
sampledist.phat=do(1000)*rflip(n,p)
head(sampledist.phat)
gf_histogram(~prop, data = sampledist.phat, binwidth = 1/n)
favstats(~prop, data = sampledist.phat)
rflip(10,0.5)
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
setwd("~/College/Homework/Year 4/Fall/Applied Stats/Project/video-game-sales-with-ratings")
Games = read.csv("Video_Games_Sales_as_at_22_Dec_2016")
Games = read.csv("Video_Games_Sales_as_at_22_Dec_2016.csv")
Games = read.csv("VGS.csv")
Games = read.csv(file="VGS.csv", sep = ",")
Games = read.csv(file="VGS.csv", sep = ",")
Games <- read.csv(file="..\VGS.csv", sep = ",")
Games <- read.csv(file="..\\VGS.csv", sep = ",")
setwd("~/College/Homework/Year 4/Fall/Applied Stats/Project/video-game-sales-with-ratings")
library(readr)
VGS <- read_csv("VGS.csv")
View(VGS)
View(VGS)
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
library(readr)
Games <- read.csv(file="VGS.csv", sep = ",")
Head(VGS, 5)
head(VGS, 5)
# If you try using captions, use one R chunk per figure
gf_point(VGS$Year_of_Release)
# If you try using captions, use one R chunk per figure
gf_bar(VGS$Year_of_Release)
# If you try using captions, use one R chunk per figure
gf_boxplot(VGS$Year_of_Release)
# If you try using captions, use one R chunk per figure
boxplot(VGS$Year_of_Release)
# If you try using captions, use one R chunk per figure
barchart(VGS$Year_of_Release)
# If you try using captions, use one R chunk per figure
gf_bar(~Year_Of_Release, data= VGS)
# If you try using captions, use one R chunk per figure
gf_bar(~Year_of_Release, data= VGS)
head(VGS, 5)
load(VGS)
View(VGS)
knit2html()
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
library(readr)
library(knitr)
library(knitr)
knit2html()
knit('fall18_proj_data_description_template.Rmd')
Games = VGS
head(VGS, 5)
Games = VGS
head(Games, 5)
Games2 = read.csv(file="C:\Users\tanus\Documents\College\Homework\Year 4\Fall\Applied Stats\Project\video-game-sales-with-ratings\VGS.csv")
Games2 = read.csv(file="C:\\Users\tanus\Documents\College\Homework\Year 4\Fall\Applied Stats\Project\video-game-sales-with-ratings\VGS.csv")
Games2 = read.csv(file="C:\\Users\\tanus\\Documents\\College\\Homework\\Year 4\\Fall\\Applied Stats\\Project\\video-game-sales-with-ratings\\VGS.csv")
head(Games, 5)
Games2 = read.csv(file="C:\\Users\\tanus\\Documents\\College\\Homework\\Year 4\\Fall\\Applied Stats\\Project\\video-game-sales-with-ratings\\VGS.csv")
head(Games2, 5)
# If you try using captions, use one R chunk per figure
gf_bar(~Year_of_Release, data= Gamses2)
# If you try using captions, use one R chunk per figure
gf_bar(~Year_of_Release, data= Games2)
# If you try using captions, use one R chunk per figure
gf_bar(~Genre, data= Games2)
# If you try using captions, use one R chunk per figure
barchart(~Genre, data= Games2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution",
xlab="Genre")
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution",
xlab="Genre")
barplot(Genre, data = Games2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution",
xlab="Genre")
barplot(~Genre, data = Games2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution",
xlab="Genre")
View(Games)
?barplot
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(Games2$Genre, main="Game Distribution", xlab="Genre")
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution", xlab="Genre")
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution", xlab="Genre", density =20)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution", xlab="Genre", density =1)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution", xlab="Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Distribution", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c(16718,16719,)))
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c[16718],)
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c[16718,])
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c[16718,,])
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c[16718,],)
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre(-c[16718],)
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre[-c(16718,16719),]
barplot(counts, main="Game Sales by Genre", las=2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre[-c(16718,16719),])
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)[-c(16718,16719),]
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Sales by Genre", las=2)
Games2 = -c(16719,16718)
GE = c(16719,16718)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre[-c(16719,16718) , ]
barplot(counts, main="Game Sales by Genre", las=2)
# These commands should always be near the top to ensure the libraries are loaded before the analysis.
library(mosaic)
library(Lock5withR)
library(readr)
Games2 = read.csv(file="C:\\Users\\tanus\\Documents\\College\\Homework\\Year 4\\Fall\\Applied Stats\\Project\\video-game-sales-with-ratings\\VGS.csv")
head(Games2, 5)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Game Sales by Genre", las=2)
gf_dotplot(genre, data = Games2)
gf_dotplot(Genre, data = Games2)
gf_dotplot(~Genre, data = Games2)
gf_histogram(~Genre, data = Games2)
gf_bar(~Genre, data = Games2)
# If you try using captions, use one R chunk per figure
counts <- table(Games2$Genre)
barplot(counts, main="Frequency by Genre", las=2)
counts <- table(Games2$Critic_Score)
barplot(counts, main="Frequency by Critic Score", las=2)
boxplot(counts, main="Frequency by Critic Score", las=2)
gf_boxplot(~Critic_Score, data=Games2)
counts1 <- table(Games2$Critic_Score)
gf_dot(Critic_Score~counts1, data=Games2)
counts1 <- table(Games2$Critic_Score)
gf_point(Critic_Score~counts1, data=Games2)
if (Games2$Critic_Score > 0) {
counts1 <- table(Games2$Critic_Score)
gf_point(Critic_Score~counts1, data=Games2)
}
if (Games2$Critic_Score > 0) {
counts1 <- table(Games2$Critic_Score)
gf_point(Critic_Score~counts1, data=Games2)
}
ifelse(Games2$Critic_Score>=0) {
tally(~Critic_Score, data = Games2)
gf_boxplot(~Critic_Score, data = Games2)
boxplot(~Critic_Score, data = Games2)
?boxplot
#boxplot(~Critic_Score, data = Games2)
boxplot(Critic_Score~,data=Games2)
#boxplot(~Critic_Score, data = Games2)
boxplot(~Critic_Score,data=Games2)
boxplot(~Critic_Score, data = Games2)
gf_boxplot(Critic_Score~, data = Games2)
gf_boxplot(~Critic_Score, data = Games2)
gf_boxplot(~Critic_Score, data = Games2)
boxplot(Games2$Critic_Score)
gf_boxplot(~Critic_Score, data = Games2)
boxplot(Games2$Critic_Score, ylab = "critic score")
gf_boxplot(~Critic_Score, data = Games2)
boxplot(Games2$Critic_Score, ylab = "Critic Score")
#gf_boxplot(~Critic_Score, data = Games2)
boxplot(Games2$Critic_Score, ylab = "Critic Score")
count3 <- table(Games2$Rating)
barplot(count3, main="Frequency by Rating", las=2)
gf_histogram(~Global_Sales, data = Games2)
gf_boxplot(~Global_Sales, data = Games2)
gf_histogram(~Global_Sales, data = Games2)
gf_boxplot(~Global_Sales, data = Games2)
gf_histogram(~Global_Sales, data = Games2)
```{r}
gf_histogram(~Global_Sales, data = Games2)
gf_histogram(~Global_Sales, data = Games2, binwidth = 1/32)
gf_histogram(~Global_Sales, data = Games2, binwidth = 45)
gf_histogram(~Global_Sales, data = Games2, binwidth = 1/10)
gf_histogram(~Global_Sales, data = Games2, binwidth = 10)
?gf_histogram
gf_histogram(~Global_Sales, data = Games2, bins = 10)
gf_histogram(~Global_Sales, data = Games2, bins = 100)
gf_histogram(~Global_Sales, data = Games2, bins = 100)
gf_histogram(~Global_Sales, data = Games2, bins = 1000)
gf_histogram(~Global_Sales, data = Games2, bins = 1/100)
gf_histogram(~Global_Sales, data = Games2, bins = 50)
gf_histogram(~Global_Sales, data = Games2, bins = 10000)
gf_histogram(~Global_Sales, data = Games2, bins = 100000)
gf_histogram(~Global_Sales, data = Games2, bins = 10000)
gf_histogram(~Global_Sales, data = Games2, bins = 1000)
gf_histogram(~Global_Sales, data = Games2, bins = 100)
gf_histogram(~Global_Sales, data = Games2, bins = 50)
gf_histogram(~Global_Sales, data = Games2, bins = 100)
gf_histogram(~Global_Sales[-c(13687,)], data = Games2, bins = 100)
gf_histogram(~Global_Sales, data = Games2[-c(13687),], bins = 100)
gf_histogram(~Global_Sales, data = Games2[-c(13687, 7273),], bins = 100)
gf_histogram(~Japan_Sales, data = Games2[-c(13687, 7273),], bins = 100)
gf_histogram(~JP_Sales, data = Games2[-c(13687, 7273),], bins = 100)
gf_histogram(~JP_Sales, data = Games2, bins = 100)
gf_histogram(~JP_Sales, data = Games2, bins = 10)
gf_histogram(~JP_Sales, data = Games2, bins = 100)
gf_histogram(~JP_Sales, data = Games2, bins = 500)
gf_histogram(~JP_Sales, data = Games2, bins = 50)
gf_histogram(~Platform, data=Games2)
gf_bar(~Platform, data=Games2)
count4 <- table(Games2$Platform)
barplot(count4, main="Frequency by Platform", las=2)
gf_point(Critic_Score~Global_Sales, data=Games2)
gf_histogram(Critic_Score~Global_Sales, data=Games2)
gf_point(Critic_Score~Global_Sales, data=Games2)
geom_point(Critic_Score~Global_Sales, data=Games2)
gn_point(Critic_Score~Global_Sales, data=Games2)
gf_point(Critic_Score~Global_Sales, data=Games2)
gf_point(Critic_Score~Global_Sales, data=Games2[-c(13687, 7273),])
gf_point(Critic_Score~Global_Sales, data=Games2[-c(13687, 7273),])
gf_point(Critic_Score~Global_Sales, data=Games2)
gf_point(Critic_Score~Global_Sales, data=Games2[-c(13687, 7273),]) %>% gf_smooth()
gf_point(Critic_Score~Global_Sales, data=Games2)
gf_point(Critic_Score~Global_Sales, data=Games2[-c(13687, 7273),]) %>% gf_smooth()
gf_point(Critic_Score~Global_Sales, data=Games2) %>% gf_smooth()
gf_point(Critic_Score~Global_Sales, data=Games2[-c(13687, 7273),])
gf_point(Critic_Score~Global_Sales, data=Games2)
boxplot(Global_Sales ~ Genre, xlab = "Critic Score")
boxplot(Global_Sales ~ Genre, data = Games2 xlab = "Critic Score")
boxplot(Global_Sales ~ Genre, data = Games2, xlab = "Critic Score")
barchart(Global_Sales ~ Genre, data = Games2, xlab = "Critic Score")
barchart(Global_Sales ~ Genre, data = Games2, xlab = "Critic Score", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, xlab = "Critic Score", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273),], ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273),, ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273), ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273),], ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2, ylab = "Global Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273),], ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Rating, data = Games2, ylab = "Global Sales (millions)", las = 2)
boxplot(Global_Sales ~ Rating, data = Games2, ylab = "Global Sales (millions)", las = 2)
boxplot(Global_Sales ~ Genre, data = Games2[-c(13687, 7273),], ylab = "GLobal Sales (millions)", las = 2)
boxplot(Global_Sales ~ Rating, data = Games2, ylab = "Global Sales (millions)", las = 2)
boxplot(Global_Sales ~ Rating, data = Games2[-c(13687, 7273),], ylab = "Global Sales (millions)", las = 2)
gf_bar(Genre~ Global_Sales, fill=TRUE, data=Games2)
gf_bar(Global_Sales~Genre, fill=TRUE, data=Games2)
gf_bar(~Platform, fill= ~Genre, data=Games2)
gf_bar(~Platform, fill= ~Genre, data=Games2, las =2)
?gf_bar
gf_bar(~Platform, fill= ~Genre, data=Games2, width = 20)
gf_bar(~Platform, fill= ~Genre, data=Games2, width = 2)
gf_bar(~Platform, fill= ~Genre, data=Games2, width = 0.5)
gf_bar(~Platform, fill= ~Genre, data=Games2, width = 0.1)
gf_bar(~Platform, fill= ~Genre, data=Games2, position = dodge)
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "dodge")
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "fill")
gf_bar(~Platform, fill= ~Genre, data=Games2, #position = "fill")
gf_bar(~Platform, fill= ~Genre, data=Games2) #, position = "fill")
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "fill")
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "fill", size=2)
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "fill", size=20)
gf_bar(~Platform, fill= ~Genre, data=Games2, position = "fill")
gf_bar(~Platform, fill= ~Genre, data=Games2)
